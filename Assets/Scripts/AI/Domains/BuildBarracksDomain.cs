using System;
using FluidHTN;

public static class BuildBarracksDomain
{
    public static Domain<AIContext, int> Create()
    {
        return new AIDomainBuilder("Build Barracks Domain")
            .Select("Build barracks")
                .Splice(PrimitiveActions.BuildBarracksAction)
                .Sequence("Wait for resources and build barracks")
                    .HasFreeBuildingSpot()
                    .WaitForResources("Barracks")
                    .Splice(PrimitiveActions.BuildBarracksAction)
                .End()
                .Sequence("Collect resources and build barracks")
                    .HasFreeBuildingSpot()
                    .Select("Collect wood")
                        .Select("Collect wood with idle worker")
                            .HasIdleWorker()
                            .Splice(PrimitiveActions.CollectWoodAction)
                        .End()
                        .Sequence("Recruit worker and collect wood")
                            .CanAffordTroop("Worker")
                            .CanRecruit("Worker")
                            .Splice(PrimitiveActions.RecruitWorkerAction)
                            .Splice(PrimitiveActions.CollectWoodAction)
                        .End()
                        .Sequence("Re-assign worker to collect wood")
                            .UnassignWorker()
                            .Splice(PrimitiveActions.CollectWoodAction)
                        .End()
                    .End()
                    .Select("Collect gold")
                        .Select("Collect gold with idle worker")
                            .HasIdleWorker()
                            .Splice(PrimitiveActions.CollectGoldAction)
                        .End()
                        .Sequence("Recruit worker and collect gold")
                            .CanAffordTroop("Worker")
                            .CanRecruit("Worker")
                            .Splice(PrimitiveActions.RecruitWorkerAction)
                            .Splice(PrimitiveActions.CollectGoldAction)
                        .End()
                        .Sequence("Re-assign worker to collect gold")
                            .UnassignWorker()
                            .Splice(PrimitiveActions.CollectGoldAction)
                        .End()
                    .End()
                    .WaitForResources("Barracks")
                    .Splice(PrimitiveActions.BuildBarracksAction)
                .End()
            .End()
            .Build();
    }
}

